[HttpPost("Image")]
public async Task<IActionResult> Create([FromForm] User user)
{
    if (string.IsNullOrEmpty(user.UserName))
    {
        return BadRequest("Invalid Submission");
    }

    // Validate if ImgName is provided
    if (user.ImgName == null || !user.ImgName.Any())
    {
        return BadRequest("No files selected.");
    }

    // Create a new user model to save user details (excluding the file here)
    var userModel = new User
    {
        FirstName = user.FirstName,
        LastName = user.LastName,
        RoleId = user.RoleId
    };

    context.Users.Add(userModel);
    await context.SaveChangesAsync();

    // Define the path to save uploaded files
    var uploadPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "uploads");
    if (!Directory.Exists(uploadPath))
    {
        Directory.CreateDirectory(uploadPath);
    }

    // Process each uploaded file
    foreach (var file in user.ImgName)
    {
        if (file.Length > 0)
        {
            var uniqueFileName = Guid.NewGuid().ToString() + Path.GetExtension(file.FileName);
            var filePath = Path.Combine(uploadPath, uniqueFileName);

            // Save the file
            using (var stream = new FileStream(filePath, FileMode.Create))
            {
                await file.CopyToAsync(stream);
            }

            // Update the user model with the file name
            userModel.ImgName += uniqueFileName + ";"; // Assuming `ImgName` stores file names as a semicolon-separated string
        }
    }

    // Update the database with the file information
    context.Users.Update(userModel);
    await context.SaveChangesAsync();

    return Ok(userModel);
}
